%startup

function [s,a] = startup(s00f,base)%该函数用cd4来取故障时间
hn1=0.125;%低通滤波器参数，高通滤波器参数较简单不需定义
h0=0.375;
h1=0.375;
h2=0.125;
N=length(s00f);%原始信号长度
zancun=zeros(1,200);
k=0;x1=0;x2=0;x3=0;
p=0;q=0;m=0;n=0;l=0;s=0;a=0;b=0;
figure(10);plot(s00f);
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% dd5 &&&&&&&&&&&&&&&&&&&&&&&&&&


% i=3;%第一尺度分解得平滑分量
% for j=4:1:N
%        s10f(1,j)=(hn1)*s00f(1,i+1)+(h0)*s00f(1,i)+(h1)*s00f(1,i-1)+(h2)*s00f(1,i-2);
%     i=i+1;
% end
% 
% 
% i=8;%第二尺度分解得平滑分量
% for j=10:1:N
%        s20f(1,j)=(hn1)*s10f(1,i+2)+(h0)*s10f(1,i)+(h1)*s10f(1,i-2)+(h2)*s10f(1,i-4);
%     i=i+1;
% end
% 
% 
% i=18;%第三尺度分解得平滑分量
% for j=22:1:N
%        s30f(1,j)=(hn1)*s20f(1,i+4)+(h0)*s20f(1,i)+(h1)*s20f(1,i-4)+(h2)*s20f(1,i-8);
%     i=i+1;
% end
% 
% 
% i=30;%第四尺度分解得细节分量
% for j=30:1:N
%        w41f(1,j)=(-2)*(s30f(1,i)-s30f(1,i-8));
%     i=i+1;
% end
% cd4=abs(w41f);
% 
% 
% i=46;%对第四尺度细节分量分解得高阶细节分量
% for j=46:1:N
%        w53f(1,j)=(-2)*(w41f(1,i)-w41f(1,i-16));
%     i=i+1;
% end
% dd5=abs(w53f);
% figure(11);plot(dd5);
% dd5_pu(1,:)=dd5(1,:)/base;%***********归一化基准值0.2605


%%%%%%%%%%%%%%%%%%%%%%%%%%%% dd4 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
i=3;%第一尺度分解得平滑分量
for j=4:1:N
       s10f(1,j)=(hn1)*s00f(1,i+1)+(h0)*s00f(1,i)+(h1)*s00f(1,i-1)+(h2)*s00f(1,i-2);
    i=i+1;
end


i=8;%第二尺度分解得平滑分量
for j=10:1:N
       s20f(1,j)=(hn1)*s10f(1,i+2)+(h0)*s10f(1,i)+(h1)*s10f(1,i-2)+(h2)*s10f(1,i-4);
    i=i+1;
end


i=18;%第三尺度分解得平滑分量
% for j=22:1:N
for j=18:1:N
%       s30f(1,j)=(hn1)*s20f(1,i+4)+(h0)*s20f(1,i)+(h1)*s20f(1,i-4)+(h2)*s20f(1,i-8);
      w31f(1,j)=(-2)*(s20f(1,i)-s20f(1,i-4));
    i=i+1;
end


i=30;%第四尺度分解得细节分量
for j=30:1:N
       w43f(1,j)=(-2)*(w31f(1,i)-w31f(1,i-8));
    i=i+1;
end
dd4=abs(w43f);
figure(11);plot(dd4);
dd4_pu(1,:)=dd4(1,:)/base;%***********归一化基准值0.2605

%%%%%%%%%%%%%%%%%%%%%%%%% dd3 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


% i=3;%第一尺度分解得平滑分量
% for j=4:1:N
%        s10f(1,j)=(hn1)*s00f(1,i+1)+(h0)*s00f(1,i)+(h1)*s00f(1,i-1)+(h2)*s00f(1,i-2);
%     i=i+1;
% end
% 
% 
% i=8;%第二尺度分解得平滑分量
% % for j=10:1:N
% %        s20f(1,j)=(hn1)*s10f(1,i+2)+(h0)*s10f(1,i)+(h1)*s10f(1,i-2)+(h2)*s10f(1,i-4);
% for j=8:1:N
%     w21f(1,j)=(-2)*(s10f(1,i)-s10f(1,i-2));
%     i=i+1;
% end
% 
% 
% i=18;%第三尺度分解得平滑分量
% % for j=22:1:N
% for j=18:1:N
%     w33f(1,j)=(-2)*(w21f(1,i)-w21f(1,i-4));
% %       s30f(1,j)=(hn1)*s20f(1,i+4)+(h0)*s20f(1,i)+(h1)*s20f(1,i-4)+(h2)*s20f(1,i-8);
% %        w31f(1,j)=(-2)*(s20f(1,i)-s20f(1,i-4));
% 
%     i=i+1;
% end
% dd3=abs(w33f);
% figure(11);plot(dd3);
% dd3_pu(1,:)=dd3(1,:)/base;%***********归一化基准值0.2605

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


for i=1:N
    for j=1:199
        zancun(1,j)=zancun(1,j+1);
    end
    zancun(1,200)=dd4_pu(1,i);
    k=k+1;
    if k>1000
        for j=1:50
            if zancun(1,j)>x1;
                x1=zancun(1,j);
            end
        end
        for j=51:100
            if zancun(1,j)>x2;
                x2=zancun(1,j);
            end
        end
        for j=101:150
            if zancun(1,j)>x3;
                x3=zancun(1,j);
            end
        end
         
        p=(x1+x2+x3)/3;
        x1=0;x2=0;x3=0;
        q=zancun(1,200)/p;
        if(q>=1.2&&s==0)
           if l==0
            l=i; 
           end
           m=m+1;
           if(m>=20)
            n=n+1;
           end
        else
            if(m>0)
                n=n+1;
            end
        end
        if(n>=50)
            if(m>=15)
                s=s+1;a=l;
                disp(['guzhang ',num2str(a)]);
            end
            m=0;n=0;l=0;
        end
    end
end
